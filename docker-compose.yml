version: "3"
services:
  producer:
    container_name: producerapp
    build:
      context: .
      dockerfile: Dockerfile.producer
    ports:
      - "7000:7000"
    volumes:
      - ./producer:/producer
    command: >
      sh -c "python manage.py makemigrations users &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:7000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOW_ALL_ORIGINS=1
      - DEBUG=1
      - POPULATE_DATA= 1
      - producer_api_key=bqGJKDDT.o02MQCO6GpXWG8BsfmSKobLtpqeI8KIg
      - consumer_api_key=ESkNzALn.5IXH6X29ksmrgpqxTRMQ2RQNcMa5t2LJ

    depends_on:
      - db
    networks:
      - producer-network

  db:
    container_name: dbproducer
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecretpassword
    networks:
      - producer-network

  consumer:
    container_name: consumerapp
    build:
      context: .
      dockerfile: Dockerfile.consumer
    volumes:
      - ./consumer:/consumer
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000 & celery -A consumer.celery worker --loglevel=DEBUG"
    environment:
      - DB_HOST=dbconsumer
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PORT=5433
      - DB_PASS=supersecretpassword
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ALLOW_ALL_ORIGINS=1
      - DEBUG=1
      - POPULATE_DATA= 1
      - CELERY_BROKER=redis://redis:6379
      - CELERY_BACKEND=redis://redis:6379
      - producer_api_key=bqGJKDDT.o02MQCO6GpXWG8BsfmSKobLtpqeI8KIg
      - consumer_api_key=ESkNzALn.5IXH6X29ksmrgpqxTRMQ2RQNcMa5t2LJ
      - RABBITMQ_URL =amqp://myuser:mypassword@localhost:5672/myvhost

    depends_on:
      - dbconsumer
    networks:
      - consumer-network

  dbconsumer:
      container_name: dbconsumer
      image: postgres:10-alpine
      environment:
        POSTGRES_DB: app
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: supersecretpassword
      networks:
        - consumer-network
  redis:
    restart: always
    image: redis:alpine
    command: redis-server --port 6379 
    networks:
      - consumer-network

  celery:
    restart: always
    container_name: consumer-celery
    build:
      context: .
      dockerfile: ./Dockerfile.consumer
    volumes:
      - ./consumer:/consumer
    command: >
      sh -c "
      celery -A consumer.celery worker -l INFO"
    environment:
      DB_HOST: dbconsumer
      DB_NAME: app
      DB_USER: postgres
      DB_PASS: supersecretpassword
      CELERY_BROKER: redis://redis:6379
      CELERY_BACKEND: redis://redis:6379
    depends_on:
      - consumer
      - redis
      - dbconsumer
    networks:
      - consumer-network



networks:
  producer-network:
  consumer-network:

volumes:
  static_data:


